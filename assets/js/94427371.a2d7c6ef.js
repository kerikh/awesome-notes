"use strict";(self.webpackChunkawesome_notes=self.webpackChunkawesome_notes||[]).push([[5491],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,k=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(k,i(i({ref:n},d),{},{components:t})):r.createElement(k,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},249:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={},l="Docker Basic Notes",c={unversionedId:"programming/devops/dockerBasicNotes",id:"programming/devops/dockerBasicNotes",title:"Docker Basic Notes",description:"Docker Basis",source:"@site/notes/programming/devops/dockerBasicNotes.md",sourceDirName:"programming/devops",slug:"/programming/devops/dockerBasicNotes",permalink:"/awesome-notes/programming/devops/dockerBasicNotes",draft:!1,editUrl:"https://github.com/sabertazimi/awesome-notes/edit/main/notes/programming/devops/dockerBasicNotes.md",tags:[],version:"current",lastUpdatedBy:"Sabertaz",lastUpdatedAt:1653068763,formattedLastUpdatedAt:"5/20/2022",frontMatter:{},sidebar:"sidebar",previous:{title:"Design Patterns Basic Notes",permalink:"/awesome-notes/programming/devops/designPatternsBasicNotes"},next:{title:"Software Testing Basic Notes",permalink:"/awesome-notes/programming/devops/softwareTestingBasicNotes"}},d={},p=[{value:"Docker Basis",id:"docker-basis",level:2},{value:"Docker CLI Workflows",id:"docker-cli-workflows",level:2},{value:"Docker Installation",id:"docker-installation",level:3},{value:"Docker Uninstallation",id:"docker-uninstallation",level:3},{value:"Get Docker Image",id:"get-docker-image",level:3},{value:"Build Docker Image",id:"build-docker-image",level:3},{value:"Run Docker Container",id:"run-docker-container",level:3},{value:"List Docker Container",id:"list-docker-container",level:3},{value:"Remove Docker Container",id:"remove-docker-container",level:3},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Dockerfile Directives",id:"dockerfile-directives",level:3}],u={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker-basic-notes"},"Docker Basic Notes"),(0,a.kt)("h2",{id:"docker-basis"},"Docker Basis"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Docker")," is ",(0,a.kt)("strong",{parentName:"p"},"process-level")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Linux")," virtual container:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Namespace"),": IPC/network/PID/UTS/user isolation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Cgroup"),": resources control."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rootfs"),": file system isolation.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// https://github.com/lizrice/containers-from-scratch\npackage main\n\nimport (\n    "fmt"\n    "io/ioutil"\n    "os"\n    "os/exec"\n    "path/filepath"\n    "strconv"\n    "syscall"\n)\n\n// go run main.go run <cmd> <args>\nfunc main() {\n    switch os.Args[1] {\n    case "run":\n        run()\n    case "child":\n        child()\n    default:\n        panic("help")\n    }\n}\n\nfunc run() {\n    fmt.Printf("Running %v \\n", os.Args[2:])\n\n    cmd := exec.Command("/proc/self/exe", append([]string{"child"}, os.Args[2:]...)...)\n    cmd.Stdin = os.Stdin\n    cmd.Stdout = os.Stdout\n    cmd.Stderr = os.Stderr\n    cmd.SysProcAttr = &syscall.SysProcAttr{\n        Cloneflags:   syscall.CLONE_NEWUTS | syscall.CLONE_NEWPID | syscall.CLONE_NEWNS,\n        Unshareflags: syscall.CLONE_NEWNS,\n    }\n\n    must(cmd.Run())\n}\n\nfunc child() {\n    fmt.Printf("Running %v \\n", os.Args[2:])\n\n    cg()\n\n    cmd := exec.Command(os.Args[2], os.Args[3:]...)\n    cmd.Stdin = os.Stdin\n    cmd.Stdout = os.Stdout\n    cmd.Stderr = os.Stderr\n\n    must(syscall.Sethostname([]byte("container")))\n    must(syscall.Chroot("/home/liz/ubuntufs"))\n    must(os.Chdir("/"))\n    must(syscall.Mount("proc", "proc", "proc", 0, ""))\n    must(syscall.Mount("thing", "myTemp", "tmpfs", 0, ""))\n\n    must(cmd.Run())\n\n    must(syscall.Unmount("proc", 0))\n    must(syscall.Unmount("thing", 0))\n}\n\nfunc cg() {\n    cgroups := "/sys/fs/cgroup/"\n    pids := filepath.Join(cgroups, "pids")\n    os.Mkdir(filepath.Join(pids, "liz"), 0755)\n    must(ioutil.WriteFile(filepath.Join(pids, "liz/pids.max"), []byte("20"), 0700))\n    // Removes the new cgroup in place after the container exits\n    must(ioutil.WriteFile(\n        filepath.Join(pids, "liz/notify_on_release"),\n        []byte("1"),\n        0700\n    ))\n    must(ioutil.WriteFile(\n        filepath.Join(pids, "liz/cgroup.procs"),\n        []byte(strconv.Itoa(os.Getpid())),\n        0700\n    ))\n}\n\nfunc must(err error) {\n    if err != nil {\n        panic(err)\n    }\n}\n')),(0,a.kt)("h2",{id:"docker-cli-workflows"},"Docker CLI Workflows"),(0,a.kt)("h3",{id:"docker-installation"},"Docker Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},' sudo apt-get update\n sudo apt-get install \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  gnupg \\\n  lsb-release\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \\\n  "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"\nsudo apt update\nsudo apt install docker-ce docker-ce-cli containerd.io\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://get.docker.com -o get-docker.sh\nsudo DRY_RUN=1 sh get-docker.sh\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status docker\nsudo usermod -aG docker $USER\n")),(0,a.kt)("h3",{id:"docker-uninstallation"},"Docker Uninstallation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker container stop $(docker container ls -aq)\ndocker system prune -a --volumes\nsudo apt purge docker-ce docker-ce-cli containerd.io\nsudo apt autoremove\nsudo rm -rf /var/lib/docker\nsudo rm -rf /var/lib/containerd\n")),(0,a.kt)("h3",{id:"get-docker-image"},"Get Docker Image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\ndocker images -a\ndocker search <images>\ndocker pull <images:tag>\n")),(0,a.kt)("h3",{id:"build-docker-image"},"Build Docker Image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker build . -t image-name\n\n# use Dockerfile at the root of the repository\ndocker build <github-repo-url> -t image-name\n")),(0,a.kt)("h3",{id:"run-docker-container"},"Run Docker Container"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"run"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"stop"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"restart"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# docker run -dp <host-port>:<container-port> [docker-image]\ndocker run -d -p 80:80 --name app-name docker/getting-started\ndocker run -d -p 80:80/tcp -p 80:80/udp --name app-name docker/getting-started\n")),(0,a.kt)("h3",{id:"list-docker-container"},"List Docker Container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\ndocker ps -l\ndocker ps -a\ndocker ps -q\n")),(0,a.kt)("h3",{id:"remove-docker-container"},"Remove Docker Container"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm <container>\n")),(0,a.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,a.kt)("h3",{id:"dockerfile-directives"},"Dockerfile Directives"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FROM"),": source image."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ENV"),": set environment variable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WORKDIR"),": change directory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"COPY"),": copy file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RUN"),": run command."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CMD"),": final command."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"EXPOSE"),": expose port.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'FROM centos:7\nRUN yum -y install httpd\nCOPY index.html /usr/share/httpd/noindex/index.html\nEXPOSE 80\nCMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'FROM centos:7\nRUN rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nRUN yum -y install nginx\nEXPOSE 80\nCMD ["nginx", "-g", "daemon off;"]\n')))}m.isMDXComponent=!0}}]);